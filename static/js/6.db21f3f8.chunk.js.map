{"version":3,"sources":["components/lotr/elements.js","components/lotr/lotr.action.js","components/lotr/index.js","containers/LOTR.js","components/Navbar/index.js","components/cats/elements.js","request.js","components/notification/elements.js","components/notification/index.js"],"names":["LOTRCArd","styled","div","lotrInfoBoundActionCreator","dispatch","payload","type","LOTR_INFO","default","lotrInfo","request","url","method","headers","Authorization","process","mapDispatchToProps","getLOTR","connect","useState","currentPage","itemsCountPerPage","paginate","setPaginate","useSelector","lotr","fetching","fetched","onError","error","resp","formattedError","retrieveMessage","useEffect","lastItemIndex","firstItemIndex","currentCats","slice","errormessage","name","content","property","Navbar","map","item","key","_id","classNameNotInView","classNameInView","className","gender","color","birth","spouse","death","activePage","totalItemsCount","length","pageRangeDisplayed","onChange","pageNumber","App","Container","to","size","PaginateWrapper","instance","axios","create","interceptors","use","config","response","Promise","reject","fadeIn","keyframes","Notification","css","message","successmessage","condition","text","defaultProps"],"mappings":"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","file":"static/js/6.db21f3f8.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const LOTRCArd = styled.div`\n  height: 159px;\n  width: 350px;\n  margin: 14px;\n  background: #ffffff;\n  box-shadow: 0px 3px 7px rgba(96, 96, 96, 0.34);\n  padding: 20px;\n  .d-flex {\n    display: flex;\n    align-items: center;\n    margin: 10px 0;\n  }\n  .topic-wrapper {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  .topic {\n    font-weight: 600;\n    font-size: 17px;\n    line-height: 23px;\n    color: #000000;\n  }\n  .key {\n    font-weight: 600;\n    font-size: 15px;\n    line-height: 23px;\n    color: #000000;\n    opacity: 0.8;\n    margin: 0 10px;\n  }\n  .value {\n    font-style: normal;\n    font-weight: normal;\n    font-size: 15px;\n    line-height: 20px;\n    color: #c4c4c4;\n  }\n  @media (max-width: 601px) {\n    width: 80%;\n  }\n`;\n","import request from \"../../request\";\nimport { LOTR_INFO } from \"./constants/actionTypes\";\nconst KEY = process.env.REACT_APP_LOTR_API_KEY;\n\nexport const lotrInfo = payload => ({\n  type: LOTR_INFO.default,\n  payload\n});\n\nexport const lotrInfoBoundActionCreator = () => dispatch => {\n  const payload = request({\n    url: `https://the-one-api.herokuapp.com/v1/character`,\n    method: \"GET\",\n    headers: { Authorization: `Bearer ${KEY}` }\n  });\n  dispatch(lotrInfo(payload));\n};\n\nexport default lotrInfoBoundActionCreator;\n","import React, { useEffect, useState } from \"react\";\nimport InViewMonitor from \"react-inview-monitor\";\nimport { Container, PaginateWrapper } from \"../cats/elements\";\nimport { LOTRCArd } from \"./elements\";\nimport getLOTR from \"./lotr.action\";\nimport Notification from \"../notification\";\nimport Loading from \"../loading\";\nimport { Helmet } from \"react-helmet-async\";\nimport { connect, useSelector } from \"react-redux\";\nimport { retrieveMessage } from \"../../utils/helpers\";\nimport Pagination from \"react-js-pagination\";\nimport { FaBirthdayCake, FaUserAlt } from \"react-icons/fa\";\nimport { GiDeathSkull } from \"react-icons/gi\";\nimport Navbar from \"../Navbar\";\n\nconst App = ({ getLOTR }) => {\n  const [paginate, setPaginate] = useState({\n    currentPage: 1,\n    itemsCountPerPage: 8\n  });\n\n  const handlePageChang = pageNumber => {\n    setPaginate({\n      ...paginate,\n      currentPage: pageNumber\n    });\n  };\n\n  const { fetching, fetched, onError, error, resp } = useSelector(\n    ({ lotr }) => lotr\n  );\n  const formattedError = onError ? retrieveMessage(error) : \"\";\n  useEffect(() => {\n    getLOTR();\n  }, [getLOTR]);\n\n  const lastItemIndex = paginate.currentPage * paginate.itemsCountPerPage;\n  const firstItemIndex = lastItemIndex - paginate.itemsCountPerPage;\n  const currentCats = resp.slice(firstItemIndex, lastItemIndex);\n  return (\n    <>\n      {fetching && <Loading />}\n      {onError && (\n        <div>\n          <Notification errormessage={formattedError} />\n        </div>\n      )}\n      {fetched && !fetching && (\n        <>\n          <Helmet>\n            <title>LOTR list</title>\n            <meta\n              name=\"description\"\n              content=\"This page displays Lord Of The Ring characters and description about them.\"\n            />\n            <meta property=\"og:site_name\" content=\"LOTR\" />\n            <meta property=\"og:image\" content=\"\" />\n          </Helmet>\n          <Navbar />\n\n          <Container>\n            {currentCats.map(item => (\n              <InViewMonitor\n                key={item._id}\n                classNameNotInView=\"vis-hidden\"\n                classNameInView={`animated fadeInUp`}\n              >\n                <LOTRCArd>\n                  <div className=\"topic-wrapper\">\n                    <h1 className=\"topic\">{item.name}</h1>\n                    <h1 className=\"topic\">{item.gender}</h1>\n                  </div>\n                  <div className=\"d-flex\">\n                    <FaBirthdayCake color=\"#f41313\" />\n                    <h1 className=\"key\">Birth:</h1>\n                    <p className=\"value\">{item.birth}</p>\n                  </div>\n                  <div className=\"d-flex\">\n                    <FaUserAlt color=\"#f41313\" />\n                    <h1 className=\"key\">Spouse:</h1>\n                    <p className=\"value\">{item.spouse} </p>\n                  </div>\n                  <div className=\"d-flex\">\n                    <GiDeathSkull color=\"#f41313\" />\n                    <h1 className=\"key\">Death:</h1>\n                    <p className=\"value\">{item.death} </p>\n                  </div>\n                </LOTRCArd>\n              </InViewMonitor>\n            ))}\n          </Container>\n          <PaginateWrapper>\n            <Pagination\n              activePage={paginate.currentPage}\n              itemsCountPerPage={paginate.itemsCountPerPage}\n              totalItemsCount={resp.length}\n              pageRangeDisplayed={5}\n              onChange={handlePageChang}\n            />\n          </PaginateWrapper>\n        </>\n      )}\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  getLOTR\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from \"react\";\nimport LOTR from \"../components/lotr\";\n\nconst App = () => <LOTR />;\n\nexport default App;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { AiOutlineThunderbolt } from \"react-icons/ai\";\n\nconst App = () => {\n  return (\n    <Container>\n      <div>\n        <Link className=\"d-flex logo\" to=\"/\">\n          <AiOutlineThunderbolt size=\"25px\" />\n          Xta App\n        </Link>\n      </div>\n      <div className=\"d-flex link-wrapper\">\n        <div>\n          <NavLink className=\"link-wrapper\" to=\"/cats\">\n            Cats\n          </NavLink>\n        </div>\n        <div>\n          <NavLink className=\"link-wrapper\" to=\"/lotr\">\n            LOTR\n          </NavLink>\n        </div>\n      </div>\n    </Container>\n  );\n};\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: white;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n  width: 100%;\n  height: 10vh;\n  background: rgba(40, 40, 40, 0.5);\n  .d-flex {\n    display: flex;\n    align-items: center;\n  }\n\n  .logo {\n    font-weight: bold;\n    font-size: 23px;\n    line-height: 31px;\n\n    color: #ffffff;\n  }\n  .link-wrapper {\n    font-style: normal;\n    font-weight: bold;\n    font-size: 18px;\n    line-height: 20px;\n    color: #ffffff;\n    margin: 0 10px;\n  }\n  .active {\n    color: red;\n  }\n`;\n\nexport default App;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  margin-top: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-flow: row wrap;\n  height: 80vh;\n  overflow-x: hidden;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n`;\n\nexport const PaginateWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 20px 10px;\n  .pagination {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 30px;\n    width: 300px;\n    border: solid whitesmoke 2px;\n    border-radius: 7px;\n    li {\n      border: solid whitesmoke 2px;\n      width: 100%;\n      height: 30px;\n\n      text-align: center;\n    }\n    .active {\n      background: linear-gradient(105.88deg, #f41313 -28.55%, #f90178 125.13%);\n    }\n  }\n`;\n","import axios from \"axios\";\n\nconst instance = axios.create({});\n\ninstance.interceptors.request.use(config => {\n  return config;\n});\n\ninstance.interceptors.response.use(\n  response => (response),\n  error =>( Promise.reject(error))\n  \n);\n\nexport default instance;\n","import styled, { keyframes, css } from \"styled-components\";\n\nconst fadeIn = keyframes`\n  from {\n    transform: translateY(10px);\n  }\n\n  to {\n   transform: translateY(0px);\n  }\n`;\nexport const Notification = styled.div`\n  color: rgb(220, 53, 69);\n  max-height: 0;\n  opacity: 0;\n  margin: 0;\n  transition: max-height 100ms linear, opacity 500ms linear 100ms,\n    transform 500ms linear 100ms, height 100ms linear;\n  ${({ error }) =>\n    error &&\n    css`\n      margin-top: 5px;\n      margin-bottom: 10px;\n      max-height: 1000px;\n      opacity: 1;\n      animation: ${fadeIn} 0.5s linear;\n    `};\n  ${({ message }) =>\n    message &&\n    css`\n      color: #270;\n      background-color: #dff2bf;\n      padding: 10px;\n      border-radius: 3px 3px 3px 3px;\n    `}\n  ${({ errormessage }) => {\n    return (\n      errormessage &&\n      css`\n        color: #d8000c;\n        background-color: #ffbaba;\n        padding: 10px;\n        border-radius: 3px 3px 3px 3px;\n      `\n    );\n  }}\n  ${({ successmessage }) => {\n    return (\n      successmessage &&\n      css`\n        color: rgba(40, 167, 69, 1);\n        background-color: rgba(40, 167, 69, 0.1);\n        padding: 10px;\n        border-radius: 3px 3px 3px 3px;\n      `\n    );\n  }}\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Notification } from \"./elements\";\n\nconst App = ({ error, message, errormessage, successmessage }) => {\n  const condition = !!error || !!message || !!errormessage || !!successmessage;\n  const text = error || message || errormessage || successmessage;\n\n  return (\n    <Notification\n      error={condition}\n      message={message}\n      errormessage={errormessage}\n      successmessage={successmessage}\n    >\n      {text}\n    </Notification>\n  );\n};\n\nApp.propTypes = {\n  error: PropTypes.string,\n  errormessage: PropTypes.string,\n  message: PropTypes.string,\n  successmessage: PropTypes.string\n};\n\nApp.defaultProps = {\n  error: \"\",\n  message: \"\",\n  errormessage: \"\",\n  successmessage: \"\"\n};\nexport default App;\n"],"sourceRoot":""}